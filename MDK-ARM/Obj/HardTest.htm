<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\HardTest.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\HardTest.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Mon Feb 04 16:12:50 2013
<BR><P>
<H3>Maximum Stack Usage =       1304 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; CollectFPTrain &rArr; DispOutString &rArr; DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[18fff48]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18fff48]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19001a0]">Reset_Handler</a>
 <LI><a href="#[d0f84c]">NMI_Handler</a>
 <LI><a href="#[d0f8c4]">HardFault_Handler</a>
 <LI><a href="#[d0f888]">MemManage_Handler</a>
 <LI><a href="#[d0f93c]">BusFault_Handler</a>
 <LI><a href="#[d0f75c]">UsageFault_Handler</a>
 <LI><a href="#[d0f7d4]">SVC_Handler</a>
 <LI><a href="#[d0f900]">DebugMon_Handler</a>
 <LI><a href="#[d0f810]">PendSV_Handler</a>
 <LI><a href="#[d0f798]">SysTick_Handler</a>
 <LI><a href="#[18ff174]">WWDG_IRQHandler</a>
 <LI><a href="#[18ff8b8]">PVD_IRQHandler</a>
 <LI><a href="#[18ff6d8]">TAMPER_IRQHandler</a>
 <LI><a href="#[17528bc]">RTC_IRQHandler</a>
 <LI><a href="#[18ffa20]">FLASH_IRQHandler</a>
 <LI><a href="#[18ff87c]">RCC_IRQHandler</a>
 <LI><a href="#[18ffbc4]">EXTI0_IRQHandler</a>
 <LI><a href="#[18ffb4c]">EXTI1_IRQHandler</a>
 <LI><a href="#[18ffb10]">EXTI2_IRQHandler</a>
 <LI><a href="#[18ffad4]">EXTI3_IRQHandler</a>
 <LI><a href="#[18ffa98]">EXTI4_IRQHandler</a>
 <LI><a href="#[18ffe58]">DMA1_Channel1_IRQHandler</a>
 <LI><a href="#[18ffe1c]">DMA1_Channel2_IRQHandler</a>
 <LI><a href="#[18ffde0]">DMA1_Channel3_IRQHandler</a>
 <LI><a href="#[18ffda4]">DMA1_Channel4_IRQHandler</a>
 <LI><a href="#[18ffd68]">DMA1_Channel5_IRQHandler</a>
 <LI><a href="#[18ffd2c]">DMA1_Channel6_IRQHandler</a>
 <LI><a href="#[18ffcf0]">DMA1_Channel7_IRQHandler</a>
 <LI><a href="#[18fff48]">ADC1_2_IRQHandler</a>
 <LI><a href="#[18ff1ec]">USB_HP_CAN1_TX_IRQHandler</a>
 <LI><a href="#[18ff1b0]">USB_LP_CAN1_RX0_IRQHandler</a>
 <LI><a href="#[18ffed0]">CAN1_RX1_IRQHandler</a>
 <LI><a href="#[18ffe94]">CAN1_SCE_IRQHandler</a>
 <LI><a href="#[1751d7c]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[18ff69c]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[18ff5e8]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[18ff624]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[18ff660]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[1755418]">TIM2_IRQHandler</a>
 <LI><a href="#[18ff570]">TIM3_IRQHandler</a>
 <LI><a href="#[18ff534]">TIM4_IRQHandler</a>
 <LI><a href="#[18ff96c]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[18ff9a8]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[18ff8f4]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[18ff930]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[18ff78c]">SPI1_IRQHandler</a>
 <LI><a href="#[18ff750]">SPI2_IRQHandler</a>
 <LI><a href="#[1753ca8]">USART1_IRQHandler</a>
 <LI><a href="#[18ff2a0]">USART2_IRQHandler</a>
 <LI><a href="#[18ff264]">USART3_IRQHandler</a>
 <LI><a href="#[18ffb88]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[18ff840]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[18ff228]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[18ff444]">TIM8_BRK_IRQHandler</a>
 <LI><a href="#[18ff390]">TIM8_UP_IRQHandler</a>
 <LI><a href="#[18ff3cc]">TIM8_TRG_COM_IRQHandler</a>
 <LI><a href="#[18ff408]">TIM8_CC_IRQHandler</a>
 <LI><a href="#[18fff0c]">ADC3_IRQHandler</a>
 <LI><a href="#[18ff9e4]">FSMC_IRQHandler</a>
 <LI><a href="#[18ff7c8]">SDIO_IRQHandler</a>
 <LI><a href="#[18ff4f8]">TIM5_IRQHandler</a>
 <LI><a href="#[18ff714]">SPI3_IRQHandler</a>
 <LI><a href="#[18ff354]">UART4_IRQHandler</a>
 <LI><a href="#[18ff318]">UART5_IRQHandler</a>
 <LI><a href="#[18ff4bc]">TIM6_IRQHandler</a>
 <LI><a href="#[18ff480]">TIM7_IRQHandler</a>
 <LI><a href="#[18ffcb4]">DMA2_Channel1_IRQHandler</a>
 <LI><a href="#[18ffc78]">DMA2_Channel2_IRQHandler</a>
 <LI><a href="#[18ffc3c]">DMA2_Channel3_IRQHandler</a>
 <LI><a href="#[18ffc00]">DMA2_Channel4_5_IRQHandler</a>
 <LI><a href="#[d1137c]">main</a>
 <LI><a href="#[1900560]">SystemInit</a>
 <LI><a href="#[18ff048]">__main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[18ff048]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[18fddc4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[18fdc98]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[18fd644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[18fdc5c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[18fd644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[18fdb6c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[1756174]"></a>SystemReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, common.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[1753d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealDataOfUSART1
</UL>

<P><STRONG><a name="[19001a0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18fff48]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18fff48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18fff48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18fff0c]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffed0]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffe94]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffe58]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffe1c]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffde0]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffda4]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffd68]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffd2c]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffcf0]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffcb4]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffc78]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffc3c]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffc00]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffbc4]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffb88]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffb4c]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffb10]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffad4]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffa98]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ffa20]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff9e4]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff9a8]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff96c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff930]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff8f4]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff8b8]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff87c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff840]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff7c8]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff78c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff750]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff714]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff6d8]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff69c]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff660]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff624]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff5e8]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff570]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff534]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff4f8]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff4bc]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff480]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff444]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff408]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff3cc]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff390]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff354]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff318]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff2a0]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff264]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff228]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff1ec]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff1b0]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18ff174]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18feb20]"></a>mktime</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mktime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[18fd860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[1752880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_ConvCalendarToUnix
</UL>

<P><STRONG><a name="[18fe9f4]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[18fe9b8]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1752718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_SetCalendarTime
<LI><a href="#[1752754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Regulate
<LI><a href="#[1752844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_ConvUnixToCalendar
</UL>

<P><STRONG><a name="[18fe97c]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[18fe88c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18fe724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[18fe7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[18fe850]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[18fe814]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[18fe7d8]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18fe88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[18fe79c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18fe760]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[18fe724]"></a>_memset$wrapper</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18fe88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[18fe634]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18fd9c8]"></a>localtime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, localtime_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = localtime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[18fd860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[1752844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_ConvUnixToCalendar
</UL>

<P><STRONG><a name="[18fd860]"></a>_localtime</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, localtime_i.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[18fd9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
<LI><a href="#[18feb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[18fd644]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18fdc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[18fdc98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[18fd608]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[18fd11c]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[18fd0e0]"></a>__decompress1</STRONG> (Thumb, 88 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[d11340]"></a>AT24C256_Configuration</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, 24c256.o(i.AT24C256_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AT24C256_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d0b508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d11304]"></a>AT45DB161D_Configuration</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, at45db161d.o(i.AT45DB161D_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AT45DB161D_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d09bf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[d09ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[d0b418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d0b508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17526a0]"></a>BKP_DeInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f10x_bkp.o(i.BKP_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[17adefc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_BackupResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[1752664]"></a>BKP_ReadBackupRegister</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_bkp.o(i.BKP_ReadBackupRegister))
<BR><BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[1752628]"></a>BKP_WriteBackupRegister</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_bkp.o(i.BKP_WriteBackupRegister))
<BR><BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[d112c8]"></a>Beep</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, beep.o(i.Beep))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Beep &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
<LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1128c]"></a>Beep_Configuration</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, beep.o(i.Beep_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Beep_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d0b508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0f93c]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d11250]"></a>ClearLcd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, 12864lcd.o(i.ClearLcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ClearLcd &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetData
<LI><a href="#[d0b634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1753d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDownLoadziku
</UL>

<P><STRONG><a name="[d11214]"></a>CloseLcdLight</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, 12864lcd.o(i.CloseLcdLight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CloseLcdLight
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1753d98]"></a>CmdDownLoadProgram</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, usart.o(i.CmdDownLoadProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CmdDownLoadProgram &rArr; I2C_Write &rArr; I2C_WritePageByte &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d11070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1753d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealDataOfUSART1
</UL>

<P><STRONG><a name="[1753d5c]"></a>CmdDownLoadziku</STRONG> (Thumb, 212 bytes, Stack size 552 bytes, usart.o(i.CmdDownLoadziku))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = CmdDownLoadziku &rArr; DispOutString &rArr; DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[d10a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_AT45DB161D
<LI><a href="#[d10ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTSendByte
<LI><a href="#[d1119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutString
<LI><a href="#[d11250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLcd
<LI><a href="#[1753c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTRecvByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1753d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealDataOfUSART1
</UL>

<P><STRONG><a name="[d111d8]"></a>CollectFPTrain</STRONG> (Thumb, 478 bytes, Stack size 24 bytes, fingerprint.o(i.CollectFPTrain))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = CollectFPTrain &rArr; DispOutString &rArr; DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[d10b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_SendNByte
<LI><a href="#[d1119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutString
<LI><a href="#[d112c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[17570ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_RegModel
<LI><a href="#[1757128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Match
<LI><a href="#[17571dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FidGetTZ
<LI><a href="#[1757218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPPOWERON
<LI><a href="#[1757254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPPOWEROFF
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1753d20]"></a>DealDataOfUSART1</STRONG> (Thumb, 398 bytes, Stack size 40 bytes, usart.o(i.DealDataOfUSART1))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = DealDataOfUSART1 &rArr; CmdDownLoadziku &rArr; DispOutString &rArr; DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[1753a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[1753c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTRecvByte
<LI><a href="#[1753ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendResponse
<LI><a href="#[1753d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDownLoadziku
<LI><a href="#[1753d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDownLoadProgram
<LI><a href="#[1756174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[18fe328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[18fe364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1753ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[d0f900]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d0b724]"></a>DispOutCHNInRow</STRONG> (Thumb, 76 bytes, Stack size 72 bytes, 12864lcd.o(i.DispOutCHNInRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DispOutCHNInRow &rArr; WriteCHN &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCHN
<LI><a href="#[d10c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_AT45DB161D
</UL>
<BR>[Called By]<UL><LI><a href="#[d1119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutString
</UL>

<P><STRONG><a name="[d0b6e8]"></a>DispOutENGInRow</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, 12864lcd.o(i.DispOutENGInRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChar
</UL>
<BR>[Called By]<UL><LI><a href="#[d1119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutString
</UL>

<P><STRONG><a name="[d1119c]"></a>DispOutString</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, 12864lcd.o(i.DispOutString))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DispOutString &rArr; DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHZKOffset
<LI><a href="#[d0b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutENGInRow
<LI><a href="#[d0b724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutCHNInRow
</UL>
<BR>[Called By]<UL><LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
<LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1752808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Display
<LI><a href="#[1753d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDownLoadziku
</UL>

<P><STRONG><a name="[1751d7c]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, exit.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI9_5_IRQHandler &rArr; USARTSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d10ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTSendByte
<LI><a href="#[1751d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[1751d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1751d40]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[d11160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
<LI><a href="#[1751d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[d11160]"></a>EXTI_Configuration</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, exit.o(i.EXTI_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EXTI_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d0b508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1751c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[1751cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[1751d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1751d04]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1751d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[1751cc8]"></a>EXTI_Init</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[d11160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[1757254]"></a>FPPOWEROFF</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fingerprint.o(i.FPPOWEROFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FPPOWEROFF &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
</UL>

<P><STRONG><a name="[1757218]"></a>FPPOWERON</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fingerprint.o(i.FPPOWERON))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FPPOWERON &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
</UL>

<P><STRONG><a name="[17571dc]"></a>FidGetTZ</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, fingerprint.o(i.FidGetTZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FidGetTZ &rArr; PS_SetSysPara &rArr; USART2RecvPackage &rArr; USARTRecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[17570b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_SetSysPara
<LI><a href="#[1757164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_GetImage
<LI><a href="#[17571a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_GenChar
</UL>
<BR>[Called By]<UL><LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
</UL>

<P><STRONG><a name="[1751c8c]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d11160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[d0b508]"></a>GPIO_Init</STRONG> (Thumb, 268 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d10b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[d10b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
<LI><a href="#[d10da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Configuration
<LI><a href="#[d10e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Configuration
<LI><a href="#[d11034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_Configuration
<LI><a href="#[d11160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
<LI><a href="#[d1128c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Configuration
<LI><a href="#[d11304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DB161D_Configuration
<LI><a href="#[d11340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24C256_Configuration
</UL>

<P><STRONG><a name="[d0af2c]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputData))
<BR><BR>[Called By]<UL><LI><a href="#[d10bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKey
</UL>

<P><STRONG><a name="[d0aef0]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[d10bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKey
<LI><a href="#[d10ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCheckCardInsert
</UL>

<P><STRONG><a name="[d0b4cc]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[d09d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage_AT45DB161D
<LI><a href="#[d09e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPage_AT45DB161D
<LI><a href="#[d0b5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetData
<LI><a href="#[d0b634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommand
<LI><a href="#[d10b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[d10e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LCD
<LI><a href="#[d11214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseLcdLight
<LI><a href="#[d112c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[d11340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24C256_Configuration
<LI><a href="#[1757254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPPOWEROFF
</UL>

<P><STRONG><a name="[d0b490]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[d09d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage_AT45DB161D
<LI><a href="#[d09e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPage_AT45DB161D
<LI><a href="#[d0b5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetData
<LI><a href="#[d0b634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommand
<LI><a href="#[d0b670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenLcdLight
<LI><a href="#[d10da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Configuration
<LI><a href="#[d10e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LCD
<LI><a href="#[d11034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_Configuration
<LI><a href="#[d112c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[d11304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DB161D_Configuration
<LI><a href="#[1757218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPPOWERON
<LI><a href="#[175c27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWERONICCARD
</UL>

<P><STRONG><a name="[d0b454]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[d0b5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetData
<LI><a href="#[d0b634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommand
</UL>

<P><STRONG><a name="[d0b6ac]"></a>GetHZKOffset</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, 12864lcd.o(i.GetHZKOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetHZKOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[d1119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutString
</UL>

<P><STRONG><a name="[d0f8c4]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d11124]"></a>I2C1_Configuration</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, iccard.o(i.I2C1_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = I2C1_Configuration &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d09528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d09564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[d095a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[d095dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[d09618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d110e8]"></a>I2C2_Configuration</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, 24c256.o(i.I2C2_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = I2C2_Configuration &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d09528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d09564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[d095a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[d095dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[d09618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d09618]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_AcknowledgeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d110ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[d110e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Configuration
<LI><a href="#[d11124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Configuration
</UL>

<P><STRONG><a name="[d068dc]"></a>I2C_CheckEvent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32f10x_i2c.o(i.I2C_CheckEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[d06954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WritePageByte
<LI><a href="#[d110ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[d068a0]"></a>I2C_ClearFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[d06c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgePolling
</UL>

<P><STRONG><a name="[d095dc]"></a>I2C_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d110e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Configuration
<LI><a href="#[d11124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Configuration
</UL>

<P><STRONG><a name="[d095a0]"></a>I2C_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_i2c.o(i.I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[17adf74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d110e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Configuration
<LI><a href="#[d11124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Configuration
</UL>

<P><STRONG><a name="[d06864]"></a>I2C_GenerateSTART</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[d06954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WritePageByte
<LI><a href="#[d06c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgePolling
<LI><a href="#[d110ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[d06828]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[d06954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WritePageByte
<LI><a href="#[d06c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgePolling
<LI><a href="#[d110ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[d067ec]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, stm32f10x_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d110ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[d09564]"></a>I2C_Init</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, stm32f10x_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d0e49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d110e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Configuration
<LI><a href="#[d11124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Configuration
</UL>

<P><STRONG><a name="[d110ac]"></a>I2C_Read</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, i2clib.o(i.I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Read &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[d066fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[d06738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[d06774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[d067ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[d06828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[d06864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[d068dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[d09618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d067b0]"></a>I2C_ReadRegister</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_ReadRegister))
<BR><BR>[Called By]<UL><LI><a href="#[d06c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgePolling
</UL>

<P><STRONG><a name="[d06774]"></a>I2C_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[d110ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[d06738]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[d06954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WritePageByte
<LI><a href="#[d06c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgePolling
<LI><a href="#[d110ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[d066fc]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[d06954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WritePageByte
<LI><a href="#[d110ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[d11070]"></a>I2C_Write</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, i2clib.o(i.I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2C_Write &rArr; I2C_WritePageByte &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d06954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WritePageByte
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1753d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDownLoadProgram
</UL>

<P><STRONG><a name="[d06954]"></a>I2C_WritePageByte</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, i2clib.o(i.I2C_WritePageByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_WritePageByte &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d066fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[d06738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[d06828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[d06864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[d068dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[d06c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgePolling
<LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d11070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>

<P><STRONG><a name="[d11034]"></a>ICCARD_Configuration</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, iccard.o(i.ICCARD_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ICCARD_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d0b508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d10ff8]"></a>ICCheckCardInsert</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, cpucard.o(i.ICCheckCardInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ICCheckCardInsert &rArr; POWERONICCARD &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d0aef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[175c27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWERONICCARD
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d11430]"></a>IWDG_Configuration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.IWDG_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[d10ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[d10f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[d10f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[d10f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[d10fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d10fbc]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[d11430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
</UL>

<P><STRONG><a name="[d10f80]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[d11430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
<LI><a href="#[1755418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[d10f44]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[d11430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
</UL>

<P><STRONG><a name="[d10f08]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[d11430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
</UL>

<P><STRONG><a name="[d10ecc]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d11430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
</UL>

<P><STRONG><a name="[d10e90]"></a>Init_LCD</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, 12864lcd.o(i.Init_LCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Init_LCD &rArr; SetCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d0b634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d10e54]"></a>IntToString</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, common.o(i.IntToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IntToString
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1752808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Display
</UL>

<P><STRONG><a name="[d10e18]"></a>KEY_Configuration</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, key.o(i.KEY_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d0b508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d10da0]"></a>LCD_Configuration</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, 12864lcd.o(i.LCD_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d0b508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[d0b670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenLcdLight
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0f888]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d0f84c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d113f4]"></a>NVIC_Configuration</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, main.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d10cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[d10d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[d10d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d10d64]"></a>NVIC_Init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d113b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCNVIC_Configuration
<LI><a href="#[d113f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[d10d28]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d113b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCNVIC_Configuration
<LI><a href="#[d113f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[d10cec]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[d113f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[d0b670]"></a>OpenLcdLight</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, 12864lcd.o(i.OpenLcdLight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenLcdLight
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[d10da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Configuration
</UL>

<P><STRONG><a name="[175c27c]"></a>POWERONICCARD</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cpucard.o(i.POWERONICCARD))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = POWERONICCARD &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d10ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCheckCardInsert
</UL>

<P><STRONG><a name="[17571a0]"></a>PS_GenChar</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, fingerprint.o(i.PS_GenChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PS_GenChar &rArr; USART2RecvPackage &rArr; USARTRecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1756fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2SendPackage
<LI><a href="#[1756ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2RecvPackage
</UL>
<BR>[Called By]<UL><LI><a href="#[17571dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FidGetTZ
</UL>

<P><STRONG><a name="[1757164]"></a>PS_GetImage</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, fingerprint.o(i.PS_GetImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PS_GetImage &rArr; USART2RecvPackage &rArr; USARTRecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1756fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2SendPackage
<LI><a href="#[1756ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2RecvPackage
</UL>
<BR>[Called By]<UL><LI><a href="#[17571dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FidGetTZ
</UL>

<P><STRONG><a name="[1757128]"></a>PS_Match</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, fingerprint.o(i.PS_Match))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PS_Match &rArr; USART2RecvPackage &rArr; USARTRecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1756fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2SendPackage
<LI><a href="#[1756ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2RecvPackage
</UL>
<BR>[Called By]<UL><LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
</UL>

<P><STRONG><a name="[17570ec]"></a>PS_RegModel</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, fingerprint.o(i.PS_RegModel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PS_RegModel &rArr; USART2RecvPackage &rArr; USARTRecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1756fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2SendPackage
<LI><a href="#[1756ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2RecvPackage
</UL>
<BR>[Called By]<UL><LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
</UL>

<P><STRONG><a name="[17570b0]"></a>PS_SetSysPara</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, fingerprint.o(i.PS_SetSysPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PS_SetSysPara &rArr; USART2RecvPackage &rArr; USARTRecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1756fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2SendPackage
<LI><a href="#[1756ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2RecvPackage
</UL>
<BR>[Called By]<UL><LI><a href="#[17571dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FidGetTZ
</UL>

<P><STRONG><a name="[17525ec]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[d0f810]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d09528]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d10b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[d10bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Configuration
<LI><a href="#[d110e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Configuration
<LI><a href="#[d11124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Configuration
<LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[17adf74]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d095a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[1755328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[d0b418]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d10b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[d10b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
<LI><a href="#[d10da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Configuration
<LI><a href="#[d10e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Configuration
<LI><a href="#[d11034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_Configuration
<LI><a href="#[d11160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
<LI><a href="#[d1128c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Configuration
<LI><a href="#[d11304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DB161D_Configuration
<LI><a href="#[d11340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24C256_Configuration
</UL>

<P><STRONG><a name="[17b0ff8]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1755328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[17adefc]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_BackupResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17526a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
</UL>

<P><STRONG><a name="[17525b0]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[d0e49c]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d09564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[d109e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[1753ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[1752574]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[1752538]"></a>RCC_LSEConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[17524fc]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[17524c0]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[d113b8]"></a>RTCNVIC_Configuration</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.RTCNVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTCNVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d10d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[d10d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1752484]"></a>RTC_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[17528bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[180cdac]"></a>RTC_EnterConfigMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_EnterConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[1752358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[1752394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
</UL>

<P><STRONG><a name="[180cd70]"></a>RTC_ExitConfigMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ExitConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[1752358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[1752394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
</UL>

<P><STRONG><a name="[1752448]"></a>RTC_GetCounter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[1752790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_GetUnixTime
</UL>

<P><STRONG><a name="[175240c]"></a>RTC_GetITStatus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[17528bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[17528bc]"></a>RTC_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rtc_time.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = RTC_IRQHandler &rArr; Time_Display &rArr; DispOutString &rArr; DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[175240c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetITStatus
<LI><a href="#[1752484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearITPendingBit
<LI><a href="#[1752808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17523d0]"></a>RTC_ITConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[d10cb0]"></a>RTC_Init</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, rtc_time.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = RTC_Init &rArr; Time_Regulate &rArr; Time_SetCalendarTime &rArr; Time_ConvCalendarToUnix &rArr; mktime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[17522e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[175231c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[17523d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[17525b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearFlag
<LI><a href="#[1752628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_WriteBackupRegister
<LI><a href="#[1752664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_ReadBackupRegister
<LI><a href="#[1752754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Regulate
<LI><a href="#[1752790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_GetUnixTime
<LI><a href="#[1752844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_ConvUnixToCalendar
<LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1752394]"></a>RTC_SetCounter</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32f10x_rtc.o(i.RTC_SetCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[180cd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[180cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[17526dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_SetUnixTime
</UL>

<P><STRONG><a name="[1752358]"></a>RTC_SetPrescaler</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32f10x_rtc.o(i.RTC_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetPrescaler
</UL>
<BR>[Calls]<UL><LI><a href="#[180cd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[180cdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[175231c]"></a>RTC_WaitForLastTask</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_WaitForLastTask))
<BR><BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[17526dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_SetUnixTime
<LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[17522e0]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[17529e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[d09e10]"></a>ReadPage_AT45DB161D</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, at45db161d.o(i.ReadPage_AT45DB161D))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadPage_AT45DB161D &rArr; spi_write
</UL>
<BR>[Calls]<UL><LI><a href="#[d09d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[d10c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_AT45DB161D
</UL>

<P><STRONG><a name="[d10c74]"></a>Read_AT45DB161D</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, at45db161d.o(i.Read_AT45DB161D))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Read_AT45DB161D &rArr; ReadPage_AT45DB161D &rArr; spi_write
</UL>
<BR>[Calls]<UL><LI><a href="#[d09e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPage_AT45DB161D
</UL>
<BR>[Called By]<UL><LI><a href="#[d0b724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutCHNInRow
<LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d09ce4]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d11304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DB161D_Configuration
</UL>

<P><STRONG><a name="[d09ca8]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[d09d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
</UL>

<P><STRONG><a name="[d09c6c]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[d09d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
</UL>

<P><STRONG><a name="[d09c30]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[d09d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
</UL>

<P><STRONG><a name="[d09bf4]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d11304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DB161D_Configuration
</UL>

<P><STRONG><a name="[d0f7d4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d10bfc]"></a>ScanKey</STRONG> (Thumb, 436 bytes, Stack size 8 bytes, key.o(i.ScanKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ScanKey &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d0aef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[d0af2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputData
<LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1753ce4]"></a>SendResponse</STRONG> (Thumb, 350 bytes, Stack size 32 bytes, usart.o(i.SendResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SendResponse &rArr; USART1_SendNByte &rArr; USARTSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d10b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_SendNByte
<LI><a href="#[18fe328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[18fe364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1753d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealDataOfUSART1
</UL>

<P><STRONG><a name="[d0b634]"></a>SetCommand</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, 12864lcd.o(i.SetCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[d0b580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteENG
<LI><a href="#[d0b5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCHN
<LI><a href="#[d10e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LCD
<LI><a href="#[d11250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLcd
</UL>

<P><STRONG><a name="[d0b5f8]"></a>SetData</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, 12864lcd.o(i.SetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[d0b580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteENG
<LI><a href="#[d0b5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCHN
<LI><a href="#[d11250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLcd
</UL>

<P><STRONG><a name="[d0e460]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d109e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[d0ed48]"></a>SysTick_CounterCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f10x_systick.o(i.SysTick_CounterCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[d0ecd0]"></a>SysTick_GetFlagStatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f10x_systick.o(i.SysTick_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[d0f798]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d0ec94]"></a>SysTick_ITConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f10x_systick.o(i.SysTick_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d109e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[d0ec58]"></a>SysTick_SetReload</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_systick.o(i.SysTick_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[1900560]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[190086c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[d10bc0]"></a>TIM2_Configuration</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, tim.o(i.TIM2_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM2_Configuration &rArr; TIM_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[d09528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1755274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[17552b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[1755328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[1755364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[17553dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1755418]"></a>TIM2_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, tim.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM2_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d10f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[17552ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[17553a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17553dc]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[d10bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Configuration
</UL>

<P><STRONG><a name="[17553a0]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[1755418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[1755364]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d10bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Configuration
</UL>

<P><STRONG><a name="[1755328]"></a>TIM_DeInit</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, stm32f10x_tim.o(i.TIM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[17adf74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[17b0ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d10bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Configuration
</UL>

<P><STRONG><a name="[17552ec]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1755418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[17552b0]"></a>TIM_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d10bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Configuration
</UL>

<P><STRONG><a name="[1755274]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[d10bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Configuration
</UL>

<P><STRONG><a name="[1752880]"></a>Time_ConvCalendarToUnix</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, rtc_time.o(i.Time_ConvCalendarToUnix))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Time_ConvCalendarToUnix &rArr; mktime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[18feb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[1752718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_SetCalendarTime
</UL>

<P><STRONG><a name="[1752844]"></a>Time_ConvUnixToCalendar</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, rtc_time.o(i.Time_ConvUnixToCalendar))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Time_ConvUnixToCalendar &rArr; localtime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[18fd9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
<LI><a href="#[18fe9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[1752808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Display
</UL>

<P><STRONG><a name="[1752808]"></a>Time_Display</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, rtc_time.o(i.Time_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Time_Display &rArr; DispOutString &rArr; DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d10e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToString
<LI><a href="#[d1119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutString
<LI><a href="#[1752790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_GetUnixTime
<LI><a href="#[1752844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_ConvUnixToCalendar
</UL>
<BR>[Called By]<UL><LI><a href="#[17528bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[1752790]"></a>Time_GetUnixTime</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rtc_time.o(i.Time_GetUnixTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Time_GetUnixTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1752448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[1752808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Display
</UL>

<P><STRONG><a name="[1752754]"></a>Time_Regulate</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, rtc_time.o(i.Time_Regulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Time_Regulate &rArr; Time_SetCalendarTime &rArr; Time_ConvCalendarToUnix &rArr; mktime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[1752718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_SetCalendarTime
<LI><a href="#[18fe9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[1752718]"></a>Time_SetCalendarTime</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, rtc_time.o(i.Time_SetCalendarTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Time_SetCalendarTime &rArr; Time_ConvCalendarToUnix &rArr; mktime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[17526dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_SetUnixTime
<LI><a href="#[1752880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_ConvCalendarToUnix
<LI><a href="#[18fe9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1752754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Regulate
</UL>

<P><STRONG><a name="[17526dc]"></a>Time_SetUnixTime</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rtc_time.o(i.Time_SetUnixTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Time_SetUnixTime &rArr; RTC_SetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[175231c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[1752394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[1752718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_SetCalendarTime
</UL>

<P><STRONG><a name="[d10b84]"></a>USART1_Configuration</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, usart.o(i.USART1_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART1_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d0b508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1753ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[1753b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1753bb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1753ca8]"></a>USART1_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = USART1_IRQHandler &rArr; DealDataOfUSART1 &rArr; CmdDownLoadziku &rArr; DispOutString &rArr; DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[1753b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1753b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[1753bf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[1753d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealDataOfUSART1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d10b48]"></a>USART1_SendNByte</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usart.o(i.USART1_SendNByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART1_SendNByte &rArr; USARTSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d10ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTSendByte
<LI><a href="#[1753c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
<LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1753ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendResponse
</UL>

<P><STRONG><a name="[1756ffc]"></a>USART2RecvPackage</STRONG> (Thumb, 348 bytes, Stack size 48 bytes, usart.o(i.USART2RecvPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USART2RecvPackage &rArr; USARTRecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1753c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTRecvByte
</UL>
<BR>[Called By]<UL><LI><a href="#[17570b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_SetSysPara
<LI><a href="#[17570ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_RegModel
<LI><a href="#[1757128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Match
<LI><a href="#[1757164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_GetImage
<LI><a href="#[17571a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_GenChar
</UL>

<P><STRONG><a name="[1756fc0]"></a>USART2SendPackage</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, usart.o(i.USART2SendPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART2SendPackage &rArr; USARTSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d10ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[17570b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_SetSysPara
<LI><a href="#[17570ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_RegModel
<LI><a href="#[1757128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Match
<LI><a href="#[1757164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_GetImage
<LI><a href="#[17571a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_GenChar
</UL>

<P><STRONG><a name="[d10b0c]"></a>USART2_Configuration</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, usart.o(i.USART2_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART2_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d09528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d0b418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d0b508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1753ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[1753bb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1753c6c]"></a>USARTRecvByte</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usart.o(i.USARTRecvByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USARTRecvByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1753a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[1753b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1753d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealDataOfUSART1
<LI><a href="#[1753d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDownLoadziku
<LI><a href="#[1756ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2RecvPackage
</UL>

<P><STRONG><a name="[d10ad0]"></a>USARTSendByte</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usart.o(i.USARTSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USARTSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1753a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[1753b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d10b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_SendNByte
<LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1751d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[1753d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDownLoadziku
<LI><a href="#[1756fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2SendPackage
</UL>

<P><STRONG><a name="[1753c30]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[d10b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_SendNByte
</UL>

<P><STRONG><a name="[1753bf4]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1753ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1753bb8]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d10b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[d10b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
</UL>

<P><STRONG><a name="[1753b7c]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[d10ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTSendByte
<LI><a href="#[1753c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTRecvByte
</UL>

<P><STRONG><a name="[1753b40]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1753ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1753b04]"></a>USART_ITConfig</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d10b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
<LI><a href="#[1753ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1753ac8]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d0e49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d10b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[d10b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
</UL>

<P><STRONG><a name="[1753a8c]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[1753c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTRecvByte
<LI><a href="#[1753d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealDataOfUSART1
</UL>

<P><STRONG><a name="[1753a50]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[d10ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTSendByte
</UL>

<P><STRONG><a name="[d0f75c]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d0b5bc]"></a>WriteCHN</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, 12864lcd.o(i.WriteCHN))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WriteCHN &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetData
<LI><a href="#[d0b634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[d0b724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutCHNInRow
</UL>

<P><STRONG><a name="[d0b580]"></a>WriteENG</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, 12864lcd.o(i.WriteENG))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetData
<LI><a href="#[d0b634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[d0b544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChar
</UL>

<P><STRONG><a name="[d09d98]"></a>WritePage_AT45DB161D</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, at45db161d.o(i.WritePage_AT45DB161D))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WritePage_AT45DB161D &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d09d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[d0b490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d0b4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d10a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_AT45DB161D
</UL>

<P><STRONG><a name="[d10a94]"></a>Write_AT45DB161D</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, at45db161d.o(i.Write_AT45DB161D))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Write_AT45DB161D &rArr; WritePage_AT45DB161D &rArr; delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d09d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage_AT45DB161D
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1753d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDownLoadziku
</UL>

<P><STRONG><a name="[18fd284]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[18fd248]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[18fd20c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[d109e0]"></a>delay_init</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, systick.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = delay_init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d0e460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[d0e49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[d0ec94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d109a4]"></a>delay_ms</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, systick.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_ms &rArr; SysTick_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d0ec58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_SetReload
<LI><a href="#[d0ecd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_GetFlagStatus
<LI><a href="#[d0ed48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CounterCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d06954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WritePageByte
<LI><a href="#[d09d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage_AT45DB161D
<LI><a href="#[d10bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKey
<LI><a href="#[d10ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCheckCardInsert
<LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
<LI><a href="#[d112c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[d1137c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1753d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDownLoadziku
<LI><a href="#[1757218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPPOWERON
<LI><a href="#[1757254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPPOWEROFF
<LI><a href="#[175c27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWERONICCARD
</UL>

<P><STRONG><a name="[18fe364]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[1753ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendResponse
<LI><a href="#[1753d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealDataOfUSART1
</UL>

<P><STRONG><a name="[d1137c]"></a>main</STRONG> (Thumb, 918 bytes, Stack size 1104 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = main &rArr; CollectFPTrain &rArr; DispOutString &rArr; DispOutENGInRow &rArr; printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d109a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[d109e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[d10a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_AT45DB161D
<LI><a href="#[d10ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTSendByte
<LI><a href="#[d10b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[d10b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_SendNByte
<LI><a href="#[d10b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
<LI><a href="#[d10bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Configuration
<LI><a href="#[d10bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKey
<LI><a href="#[d10c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_AT45DB161D
<LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[d10da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Configuration
<LI><a href="#[d10e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Configuration
<LI><a href="#[d10e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToString
<LI><a href="#[d10e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LCD
<LI><a href="#[d10ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCheckCardInsert
<LI><a href="#[d11034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_Configuration
<LI><a href="#[d11070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[d110ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[d110e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Configuration
<LI><a href="#[d11124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Configuration
<LI><a href="#[d11160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
<LI><a href="#[d1119c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutString
<LI><a href="#[d111d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CollectFPTrain
<LI><a href="#[d11214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseLcdLight
<LI><a href="#[d11250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLcd
<LI><a href="#[d1128c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Configuration
<LI><a href="#[d112c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[d11304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DB161D_Configuration
<LI><a href="#[d11340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24C256_Configuration
<LI><a href="#[d113b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCNVIC_Configuration
<LI><a href="#[d113f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[d11430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
<LI><a href="#[18fe634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[18fe79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[18fe9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[18fe328]"></a>malloc</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1753ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendResponse
<LI><a href="#[1753d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DealDataOfUSART1
</UL>

<P><STRONG><a name="[d0b544]"></a>printChar</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, 12864lcd.o(i.printChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = printChar &rArr; WriteENG &rArr; SetData
</UL>
<BR>[Calls]<UL><LI><a href="#[d0b580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteENG
</UL>
<BR>[Called By]<UL><LI><a href="#[d0b6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutENGInRow
</UL>

<P><STRONG><a name="[d09d20]"></a>spi_write</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, at45db161d.o(i.spi_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_write
</UL>
<BR>[Calls]<UL><LI><a href="#[d09c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[d09c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[d09ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d09d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage_AT45DB161D
<LI><a href="#[d09e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPage_AT45DB161D
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d06c60]"></a>I2C_AcknowledgePolling</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, i2clib.o(i.I2C_AcknowledgePolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_AcknowledgePolling
</UL>
<BR>[Calls]<UL><LI><a href="#[d06738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[d067b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadRegister
<LI><a href="#[d06828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[d06864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[d068a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[d06954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WritePageByte
</UL>

<P><STRONG><a name="[17529e8]"></a>RTC_Configuration</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, rtc_time.o(i.RTC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_Configuration &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d09528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[17522e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[175231c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[1752358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[17523d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[17524c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[17524fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[1752538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[1752574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[17525ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[17526a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d10cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[190086c]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[1900830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[1900560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1900830]"></a>SetSysClockTo72</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Called By]<UL><LI><a href="#[190086c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
